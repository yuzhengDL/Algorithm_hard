class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> temp;
        vector<bool> map(nums.size(), false); 
        dfs(res, nums, temp, map);
        return res;
    }
    
    void dfs(vector<vector<int>>& res, vector<int>& nums, vector<int>& temp, vector<bool>& map){
        if (temp.size() == nums.size()) {
            res.push_back(temp);
            return;
        }
        for (int i=0;i<nums.size();i++){
            if (!map[i]){
                map[i] = true;
                temp.push_back(nums[i]);
                dfs(res, nums, temp, map);
                temp.pop_back();
                map[i] = false;
            }
        }
    }
};

class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        vector<int> num;
        res.push_back("(");
        num.push_back(1);
        for (int i=0;i<2*n-1;i++){
            int count = res.size();
            for (int j=0;j<count;j++){
                string temp = res[0];
                if (num[0]<n){
                    res.push_back(temp+"(");
                    num.push_back(num[0]+1);
                }
                if (isValid(temp+")")){
                    res.push_back(temp+")");
                    num.push_back(num[0]);
                }
                res.erase(res.begin());
                num.erase(num.begin());
            }
        }
        return res;
    }
    
    bool isValid(string s){
        stack<string> stk;
        stk.push("(");
        for (int i=1;i<s.size();i++){
            if (s[i]=='(')
                stk.push("(");
            else{
                if (stk.empty()) return false;
                else stk.pop();
            }
        }
        return true;
    }
};
